[
  {
    "name": "Flume",
    "modelType": "Flume",
    "description": {
      "short": "Flume is a distributed, reliable, and available service for efficiently collecting, aggregating, and moving large amounts of log data.",
      "long": "Flume is a distributed, reliable, and available service for efficiently collecting, aggregating, and moving large amounts of log data. It has a simple and flexible architecture based on streaming data flows.",
      "learnMore": "https://stratio.atlassian.net/wiki/display/SPARKTA0x8/7.1+Inputs#id-7.1Inputs-8.1.1Input-flume"
    },
    "properties": [
      {
        "propertyId": "type",
        "propertyName": "_TYPE_",
        "propertyType": "select",
        "qa": "fragment-details-flume-type",
        "values": [
          {
            "label": "pull",
            "value": "pull"
          },
          {
            "label": "push",
            "value": "push"
          }
        ],
        "regexp": "pull|push",
        "default": "pull",
        "required": true,
        "tooltip": ""
      },
      {
      "propertyId": "addresses",
      "propertyName": "_ADDRESSES_",
      "propertyType": "list",
      "default": "",
      "required": true,
      "hidden": false,
      "limit": 0,
      "tooltip": "",
      "qa": "fragment-details-flume-pull-addresses",
      "visible": [
          [
            {
              "propertyId": "type",
              "value": "pull"
            }
          ]
        ],
      "fields": [
        {
          "propertyId": "host",
          "propertyName": "_HOST_",
          "propertyType": "text",
          "regexp": "((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))|(((?![0-9]+$)(?!.*-$)(?!-)[a-zA-Z0-9-]{2,63}))",
          "default": "localhost",
          "required": true,
          "tooltip": "Flume's address.",
          "hidden": false,
          "qa": "fragment-details-flume-pull-host"
        },
        {
          "propertyId": "port",
          "propertyName": "_PORT_",
          "propertyType": "text",
          "regexp": "(0|([1-9]\\d{0,3}|[1-5]\\d{4}|[6][0-5][0-5]([0-2]\\d|[3][0-5])))",
          "default": "11999",
          "required": true,
          "tooltip": "Flume's port.",
          "hidden": false,
          "qa": "fragment-details-flume-pull-port"
        }
      ]
      },
      {
        "propertyId": "maxBatchSize",
        "propertyName": "_MAX_BATCH_SIZE",
        "propertyType": "text",
        "regexp": "\\d*",
        "default": "1000",
        "required": false,
        "tooltip": "",
        "hidden": false,
        "qa": "fragment-details-flume-pull-max-batch-size",
        "visible": [
          [
            {
              "propertyId": "type",
              "value": "pull"
            }
          ]
        ]
      },
      {
        "propertyId": "parallelism",
        "propertyName": "_PARALLELISM_",
        "propertyType": "text",
        "regexp": "\\d*",
        "default": "5",
        "required": false,
        "tooltip": "",
        "hidden": false,
        "qa": "fragment-details-flume-pull-parallelism",
        "visible": [
          [
            {
              "propertyId": "type",
              "value": "pull"
            }
          ]
        ]
      },
      {
        "propertyId": "hostname",
        "propertyName": "_HOST_",
        "propertyType": "text",
        "regexp": "((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))|(((?![0-9]+$)(?!.*-$)(?!-)[a-zA-Z0-9-]{2,63}))",
        "default": "localhost",
        "required": true,
        "tooltip": "You must set the Flume host IP or name.",
        "hidden": false,
        "qa": "fragment-details-flume-push-host",
        "visible": [
          [
            {
              "propertyId": "type",
              "value": "push"
            }
          ]
        ]
      },
      {
        "propertyId": "port",
        "propertyName": "_PORT_",
        "propertyType": "text",
        "regexp": "(0|([1-9]\\d{0,3}|[1-5]\\d{4}|[6][0-5][0-5]([0-2]\\d|[3][0-5])))",
        "default": "11999",
        "required": true,
        "tooltip": "Flume port",
        "hidden": false,
        "qa": "fragment-details-flume-push-port",
        "visible": [
          [
            {
              "propertyId": "type",
              "value": "push"
            }
          ]
        ]
      },
      {
        "propertyId": "enableDecompression",
        "propertyName": "_DECOMPRESSION_",
        "propertyType": "boolean",
        "regexp": "true|false",
        "required": false,
        "tooltip": "",
        "hidden": false,
        "qa": "fragment-details-flume-push-enable-decompression",
        "visible": [
          [
            {
              "propertyId": "type",
              "value": "push"
            }
          ]
        ]
      }
    ]
  },
  {
    "name": "Kafka",
    "modelType": "Kafka",
    "description": {
      "short": "Apache Kafka is publish-subscribe messaging rethought as a distributed commit log.",
      "long": "Apache Kafka is publish-subscribe messaging rethought as a distributed commit log. Based on the received-based approach (https://spark.apache.org/docs/latest/streaming-kafka-integration.html)",
      "learnMore": "https://stratio.atlassian.net/wiki/display/SPARKTA0x8/7.1+Inputs#id-7.1Inputs-8.1.2Input-kafka"
    },
    "properties": [
      {
      "propertyId": "zookeeper.connect",
      "propertyName": "_ZOOKEEPER_CONNECT_",
      "propertyType": "list",
      "default": "",
      "required": true,
      "hidden": false,
      "limit": 0,
      "tooltip": "",
      "qa": "fragment-details-kafka-zookeeper-connect",
      "fields": [
        {
          "propertyId": "host",
          "propertyName": "_ZOOKEEPER_HOST_",
          "propertyType": "text",
          "regexp": "((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))|(((?![0-9]+$)(?!.*-$)(?!-)[a-zA-Z0-9-]{2,63}))",
          "default": "localhost",
          "required": true,
          "tooltip": "Zookeeper's address.",
          "hidden": false,
          "qa": "fragment-details-kafka-host"
        },
        {
          "propertyId": "port",
          "propertyName": "_ZOOKEEPER_PORT_",
          "propertyType": "text",
          "regexp": "(0|([1-9]\\d{0,3}|[1-5]\\d{4}|[6][0-5][0-5]([0-2]\\d|[3][0-5])))",
          "default": "2181",
          "required": true,
          "tooltip": "Zookeeper's port.",
          "hidden": false,
          "qa": "fragment-details-kafka-port"
        }
      ]
      },
      {
        "propertyId": "kafkaParams.group.id",
        "propertyName": "_GROUP_ID_",
        "propertyType": "text",
        "regexp": "",
        "required": true,
        "tooltip": "",
        "qa": "fragment-details-kafka-group-id"
      },
      {
      "propertyId": "topics",
      "propertyName": "_TOPICS_",
      "propertyType": "list",
      "default": "",
      "required": true,
      "hidden": false,
      "limit": 0,
      "tooltip": "",
      "qa": "fragment-details-kafka-topics",
      "fields": [
        {
          "propertyId": "topic",
          "propertyName": "_TOPIC_",
          "propertyType": "text",
          "regexp": "",
          "default": "",
          "required": true,
          "tooltip": "Topic to connect.",
          "hidden": false,
          "qa": "fragment-details-kafka-topic"
        },
        {
          "propertyId": "partition",
          "propertyName": "_PARTITION_",
          "propertyType": "text",
          "regexp": "\\d*",
          "default": "1",
          "required": true,
          "tooltip": "",
          "hidden": false,
          "qa": "fragment-details-kafka-partition"
        }
      ]
      }
    ]
  },
  {
    "name": "Kafka Direct",
    "modelType": "KafkaDirect",
    "description": {
      "short": "Apache Kafka is publish-subscribe messaging rethought as a distributed commit log.",
      "long": "Apache Kafka is publish-subscribe messaging rethought as a distributed commit log. Based on the direct approach (https://spark.apache.org/docs/latest/streaming-kafka-integration.html)",
      "learnMore": "https://stratio.atlassian.net/wiki/display/SPARKTA0x8/7.1+Inputs#id-7.1Inputs-8.1.3Input-KafkaDirect"
    },
    "properties": [
      {
      "propertyId": "metadata.broker.list",
      "propertyName": "_METADATA_BROKER_LIST_",
      "propertyType": "list",
      "default": "",
      "required": true,
      "hidden": false,
      "limit": 0,
      "tooltip": "",
      "qa": "fragment-details-kafkadirect-broker-list",
      "fields": [
        {
          "propertyId": "broker",
          "propertyName": "_BROKER_",
          "propertyType": "text",
          "regexp": "((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))|(((?![0-9]+$)(?!.*-$)(?!-)[a-zA-Z0-9-]{2,63}))",
          "default": "localhost",
          "required": true,
          "tooltip": "Broker's address.",
          "hidden": false,
          "qa": "fragment-details-kafkadirect-broker"
        },
        {
          "propertyId": "port",
          "propertyName": "_PORT_",
          "propertyType": "text",
          "regexp": "(0|([1-9]\\d{0,3}|[1-5]\\d{4}|[6][0-5][0-5]([0-2]\\d|[3][0-5])))",
          "default": "9092",
          "required": true,
          "tooltip": "Broker's port.",
          "hidden": false,
          "qa": "fragment-details-kafkadirect-port"
        }
      ]
      },
      {
        "propertyId": "kafkaParams.group.id",
        "propertyName": "_GROUP_ID_",
        "propertyType": "text",
        "regexp": "",
        "required": true,
        "tooltip": "",
        "qa": "fragment-details-kafkadirect-group-id"
      },
      {
      "propertyId": "topics",
      "propertyName": "_TOPICS_",
      "propertyType": "list",
      "default": "",
      "required": true,
      "hidden": false,
      "limit": 0,
      "tooltip": "",
      "qa": "fragment-details-kafkadirect-topics",
      "fields": [
        {
          "propertyId": "topic",
          "propertyName": "_TOPIC_",
          "propertyType": "text",
          "regexp": "",
          "default": "",
          "required": true,
          "tooltip": "Topic to connect.",
          "hidden": false,
          "qa": "fragment-details-kafkadirect-topic"
        }
      ]
      }
    ]
  },
  {
    "name": "RabbitMQ",
    "modelType": "RabbitMQ",
    "description": {
      "short": "RabbitMQ is an open source message broker software (sometimes called message-oriented middleware) that implements the Advanced Message Queuing Protocol (AMQP)",
      "long": "RabbitMQ is an open source message broker software (sometimes called message-oriented middleware) that implements the Advanced Message Queuing Protocol (AMQP)",
      "learnMore": "https://stratio.atlassian.net/wiki/display/SPARKTA0x8/7.1+Inputs#id-7.1Inputs-8.1.4Input-rabbitMQ"
    },
    "properties": [
      {
        "propertyId": "queue",
        "propertyName": "_QUEUE_",
        "propertyType": "text",
        "regexp": "",
        "required": false,
        "tooltip": "RabbitMQ's name queue.",
        "qa": "fragment-details-rabbitMQ-queue"
      },
      {
        "propertyId": "host",
        "propertyName": "_HOST_",
        "propertyType": "text",
        "regexp": "((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))|(((?![0-9]+$)(?!.*-$)(?!-)[a-zA-Z0-9-]{2,63}))",
        "default": "localhost",
        "required": true,
        "tooltip": "RabbitMQ's hostname.",
        "qa": "fragment-details-rabbitMQ-host"
      },
      {
        "propertyId": "port",
        "propertyName": "_PORT_",
        "propertyType": "text",
        "regexp": "(0|([1-9]\\d{0,3}|[1-5]\\d{4}|[6][0-5][0-5]([0-2]\\d|[3][0-5])))",
        "default": "5672",
        "required": true,
        "tooltip": "RabbitMQ's port.",
        "qa": "fragment-details-rabbitMQ-port"
      },
      {
        "propertyId": "exchangeName",
        "propertyName": "_EXCHANGE_NAME_",
        "propertyType": "text",
        "regexp": "",
        "default": "",
        "required": false,
        "tooltip": "Name of the exchange where the data will be consumed",
        "qa": "fragment-details-rabbitMQ-exchangeName"
      },
      {
      "propertyId": "routingKeys",
      "propertyName": "_ROUTING_KEYS_",
      "propertyType": "list",
      "default": "",
      "required": false,
      "hidden": false,
      "limit": 0,
      "tooltip": "",
      "qa": "fragment-details-rabbitMQ-routingKeys",
      "fields": [
        {
          "propertyId": "routingKey",
          "propertyName": "_ROUTING_KEY_",
          "propertyType": "text",
          "regexp": "",
          "default": "",
          "required": false,
          "tooltip": "The exchange will delivery the messages to all the routing keys.",
          "hidden": false,
          "qa": "fragment-details-rabbitMQ-routingKey"
        }
      ]
      }
    ]
  },
  {
    "name": "Socket",
    "modelType": "Socket",
    "description": {
      "short": "A network socket is an endpoint of an inter-process communication across a computer network.",
      "long": "A network socket is an endpoint of an inter-process communication across a computer network.",
      "learnMore": "https://stratio.atlassian.net/wiki/display/SPARKTA0x8/7.1+Inputs#id-7.1Inputs-8.1.5Input-Socket"
    },
    "properties": [
      {
        "propertyId": "hostname",
        "propertyName": "_HOST_",
        "propertyType": "text",
        "regexp": "((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))|(((?![0-9]+$)(?!.*-$)(?!-)[a-zA-Z0-9-]{2,63}))",
        "default": "",
        "required": true,
        "tooltip": "Socket hostname",
        "qa": "fragment-details-socket-hostname"
      },
      {
        "propertyId": "port",
        "propertyName": "_PORT_",
        "propertyType": "text",
        "regexp": "(0|([1-9]\\d{0,3}|[1-5]\\d{4}|[6][0-5][0-5]([0-2]\\d|[3][0-5])))",
        "default": "",
        "required": true,
        "tooltip": "Socket port",
        "qa": "fragment-details-socket-port"
      }
    ]
  },
  {
    "name": "TwitterJson",
    "modelType": "TwitterJson",
    "description": {
      "short": "Reads events from Twitter stream and return the status in a json.",
      "long": "Reads events from Twitter stream and return the status in a json.",
      "learnMore": "https://stratio.atlassian.net/wiki/display/SPARKTA0x8/7.1+Inputs#id-7.1Inputs-8.1.6Input-Twitter"
    },
    "properties": [
      {
        "propertyId": "consumerKey",
        "propertyName": "_CONSUMER_KEY_",
        "propertyType": "text",
        "regexp": "",
        "default": "",
        "required": true,
        "tooltip": "Twitter's consumer key.",
        "qa": "fragment-details-twitter-consumerKey"
      },
      {
        "propertyId": "consumerSecret",
        "propertyName": "_CONSUMER_SECRET_",
        "propertyType": "text",
        "regexp": "",
        "default": "",
        "required": true,
        "tooltip": "Twitter's consumer secret",
        "qa": "fragment-details-twitter-consumerSecret"
      },
      {
        "propertyId": "accessToken",
        "propertyName": "_ACCESS_TOKEN_",
        "propertyType": "text",
        "regexp": "",
        "default": "",
        "required": true,
        "tooltip": "Twitter's access token.",
        "qa": "fragment-details-twitter-accessToken"
      },
      {
        "propertyId": "accessTokenSecret",
        "propertyName": "_TOKEN_SECRET_",
        "propertyType": "text",
        "regexp": "",
        "default": "",
        "required": true,
        "tooltip": "Twitter's token secret.",
        "qa": "fragment-details-twitter-accessTokenSecret"
      },
      {
        "propertyId": "termsOfSearch",
        "propertyName": "_TERMS_OF_SEARCH_",
        "propertyType": "text",
        "regexp": "",
        "default": "",
        "required": false,
        "tooltip": "It allows to search tweets based on the words of this field. If you donâ€™t use this field, it searches over global trending topics.",
        "qa": "fragment-details-twitter-termsOfSearch"
      }
    ]
  },
  {
    "name": "WebSocket",
    "modelType": "WebSocket",
    "description": {
      "short": "WebSocket is a protocol providing full-duplex communication channels over a single TCP connection.",
      "long": "WebSocket is a protocol providing full-duplex communication channels over a single TCP connection.",
      "learnMore": "https://stratio.atlassian.net/wiki/display/SPARKTA0x8/7.1+Inputs#id-7.1Inputs-8.1.7Input-WebSocket"
    },

    "properties": [
      {
        "propertyId": "url",
        "propertyName": "_URL_",
        "propertyType": "text",
        "regexp": "",
        "default": "ws://stream.meetup.com/2/rsvps",
        "required": true,
        "tooltip": "Websocket url.",
        "qa": "fragment-details-websocket-url"
      }
    ]
  }
]
